/* Inherit base card styles from global styles.css by ensuring the host element or a wrapper has the .card class if not already applied via HTML structure.
   If .project-card is meant to BE the card, we can simplify.
   Assuming .project-card IS the card itself: */
.project-card {
  /* These properties are already in global .card, but specificity might require them here or ensure .card is also on the element */
  background-color: #fff; /* or var(--light-color) if preferred over pure white */
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  overflow: hidden;
  /* End of potentially redundant properties */

  transition: transform var(--transition-normal) ease, box-shadow var(--transition-normal) ease;
  height: 100%;
  display: flex;
  flex-direction: column;
  position: relative; /* For ::after pseudo-element */
}

.project-card:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
}

/* Use global .card-header properties by ensuring the HTML element has this class */
.card-header {
  padding: var(--spacing-4); /* Already in global .card-header */
  border-bottom: 1px solid var(--gray-200); /* Slightly different from global, can keep or align */
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  background-color: var(--gray-100); /* Aligned to existing variable */
}

.project-title {
  margin: 0;
  font-size: var(--font-size-lg);
  color: var(--gray-900);
  font-weight: 600;
  flex: 1;
  line-height: 1.4;
}

.similarity-badge {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  border-radius: var(--border-radius-full);
  font-weight: 600;
  font-size: var(--font-size-sm);
  text-align: center;
  min-width: 60px;
  margin-left: var(--spacing-3);
}

.high-similarity {
  background-color: var(--danger-color);
  color: white;
}

.medium-similarity {
  background-color: var(--warning-color);
  color: var(--gray-900);
}

.low-similarity {
  background-color: var(--success-color);
  color: white;
}

.card-body {
  padding: var(--spacing-4);
  flex: 1;
  display: flex;
  flex-direction: column;
}

.project-meta {
  margin-bottom: var(--spacing-4);
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--spacing-2);
}

.meta-item {
  margin-bottom: var(--spacing-2);
  font-size: var(--font-size-sm);
}

.meta-label {
  font-weight: 600;
  color: var(--gray-600);
  margin-right: var(--spacing-2);
  display: block;
  margin-bottom: var(--spacing-1);
}

.meta-value {
  color: var(--gray-800);
  font-weight: 500;
}

.project-description {
  font-size: var(--font-size-sm);
  color: var(--gray-700);
  margin-bottom: var(--spacing-4);
  line-height: 1.6;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  flex: 1;
}

.project-tags {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-2);
  margin-top: auto;
}

.tag {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  background-color: var(--gray-200);
  border-radius: var(--border-radius-full);
  font-size: var(--font-size-sm);
  color: var(--gray-700);
  font-weight: 500;
}

/* Use global .card-footer properties */
.card-footer {
  padding: var(--spacing-4); /* Already in global .card-footer */
  border-top: 1px solid var(--gray-200); /* Slightly different from global, can keep or align */
  text-align: right;
  background-color: var(--gray-100); /* Aligned to existing variable */
}

/* Apply global button styles and add any specific overrides if necessary */
.view-button {
  /* Base styles from .btn */
  display: inline-block;
  font-weight: 500;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: 1px solid transparent;
  padding: 0.5rem 1rem; /* Consistent with .btn */
  font-size: var(--font-size-sm); /* Specific size for this button */
  line-height: 1.5;
  border-radius: var(--border-radius);
  transition: all var(--transition-fast) ease-in-out, transform var(--transition-fast) ease; /* Added transform to all transition */
  cursor: pointer;

  /* Styles from .btn-primary */
  color: white;
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  text-decoration: none; /* Ensure no underline from <a> tag */
}

.view-button:hover {
  background-color: var(--primary-dark);
  border-color: var(--primary-dark);
  transform: translateY(-2px); /* Keep this specific hover effect */
}

/* Add a subtle hover effect */
.project-card::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  opacity: 0;
  transition: opacity var(--transition-normal) ease;
  pointer-events: none;
}

.project-card:hover::after {
  opacity: 1;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .project-meta {
    grid-template-columns: 1fr;
  }
  
  .card-header, .card-body, .card-footer {
    padding: var(--spacing-3);
  }
}
